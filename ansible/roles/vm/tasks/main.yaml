---

- name: Gather OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yml"

- name: Collect FCC files
  merge_yamls:
    sources: "{{ lookup('fileglob', '{{ images_dir }}/{{ vmname }}/*.fcc', wantlist=True) }}"
    target: '{{ images_dir }}/{{ vmname }}.fcc'
  register: ignite_fcc

- name: Compile ignite file
  shell: |
    podman run -i --rm quay.io/coreos/fcct:release \
      --pretty --strict < {{ images_dir }}/{{ vmname }}.fcc \
      > {{ images_dir }}/{{ vmname }}.ign
  when: ignite_fcc.changed

- name: Check if Fedora CoreOS Qcow2 image exists
  stat:
    path: '{{ images_dir }}/fedora-coreos-{{ fcos_version }}-qemu.{{ fcos_arch }}.qcow2'
  register: fcos_image
  changed_when: False

- name: Download Fedora CoreOS Qcow2 image as xz archive
  get_url:
    url: 'https://builds.coreos.fedoraproject.org/prod/streams/{{ fcos_stream }}/builds/{{ fcos_version }}/{{ fcos_arch }}/fedora-coreos-{{ fcos_version }}-qemu.{{ fcos_arch }}.qcow2.xz'
    dest: '{{ images_dir }}/fedora-coreos-{{ fcos_version }}-qemu.{{ fcos_arch }}.qcow2.xz'
    checksum: '{{ fcos_checksum }}'
  when: not fcos_image.stat.exists

- name: Extract XZ archive of Fedora CoreOS Qcow2 image
  command: |
    unxz fedora-coreos-{{ fcos_version }}-qemu.{{ fcos_arch }}.qcow2.xz
  args:
    chdir: '{{ images_dir }}'
    creates: '{{ images_dir }}/fedora-coreos-{{ fcos_version }}-qemu.{{ fcos_arch }}.qcow2'

- name: Ensure VM is removed
  virt:
    name: '{{ vmname }}'
    state: destroyed
  when: cleanup | bool

- name: Remove VM disk image
  file:
    path: '{{ images_dir }}/{{ vmname }}.qcow2'
    state: absent
  when: cleanup | bool

- name: Create VM disk image
  command: |
    qemu-img create -f qcow2 -F qcow2 \
      -b {{ images_dir }}/fedora-coreos-{{ fcos_version }}-qemu.{{ fcos_arch }}.qcow2 \
      {{ images_dir }}/{{ vmname }}.qcow2
  args:
    creates: '{{ images_dir }}/{{ vmname }}.qcow2'

- name: Wait for the qcow2 image to be ready
  shell: '! lsof {{ images_dir }}/{{ vmname }}.qcow2'
  register: result
  until: result.rc == 0
  changed_when: False
  retries: 360
  delay: 2

- name: Ensure VM {{ vmname }} is running
  environment:
    LANG: C
  shell: |
    if virsh --connect qemu:///system domid --domain {{ vmname }} 2>/dev/null 1>&2; then
      exit 0
    fi
    virt-install \
      --connect qemu:///system \
      --name={{ vmname }} \
      --ram {{ ram }} \
      --vcpus={{ vcpus }} \
      --os-variant fedora-coreos-{{ fcos_stream }} \
      --network network=default,mac={{ mac_address }} \
      --import \
      --disk {{ images_dir }}/{{ vmname }}.qcow2 \
      --qemu-commandline="-fw_cfg name=opt/com.coreos/config,file={{ images_dir }}/{{ vmname }}.ign" \
      --serial pty \
      --graphics=none \
      --noautoconsole
  register: virt_install
  changed_when: '"Domain creation completed" in virt_install.stdout'
