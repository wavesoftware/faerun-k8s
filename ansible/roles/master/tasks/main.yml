---

- name: Set facts
  set_fact:
    images_dir: /var/lib/libvirt/images
    vmname: 'k8s-{{ node_name }}'
    etcd_name: '{{ node_name }}'
    domain_name: '{{ node_name }}.k8s.suszynski.org'
    cluster_dns_service_ip: 10.3.0.10
    etcd_initial_cluster: "{% for item in k8s_masters %}{{item}}=https://{{item}}.k8s.suszynski.org:2380{{ '' if loop.last else ',' }}{% endfor %}"
    etcd_servers: "{% for item in k8s_masters %}https://{{item}}.k8s.suszynski.org:2379{{ '' if loop.last else ',' }}{% endfor %}"

- name: Read kubeconfigs
  set_fact:
    kube_controller_manager_kubeconfig: "{{ lookup('file', 'kubeconfigs/kube-controller-manager.kubeconfig') }}"
    kube_scheduler_kubeconfig: "{{ lookup('file', 'kubeconfigs/kube-scheduler.kubeconfig') }}"
    admin_kubeconfig: "{{ lookup('file', 'kubeconfigs/admin.kubeconfig') }}"
  no_log: yes

- name: Read certs
  set_fact:
    rootca_crt: "{{ lookup('file', 'certs/root/certs/root.crt') }}"
    kubernetes_crt: "{{ lookup('file', 'certs/root/certs/kubernetes.crt') }}"
    service_account_crt: "{{ lookup('file', 'certs/root/certs/service-account.crt') }}"

- name: Alias certs
  set_fact:
    etcd_peerca_crt: "{{ rootca_crt }}"
    etcd_server_crt: "{{ kubernetes_crt }}"
    etcd_peer_crt: "{{ kubernetes_crt }}"
  no_log: yes

- name: Read keys for certificates
  set_fact:
    rootca_key: "{{ lookup('file', 'certs/root/keys/root.key') }}"
    kubernetes_key: "{{ lookup('file', 'certs/root/keys/kubernetes.key') }}"
    service_account_key: "{{ lookup('file', 'certs/root/keys/service-account.key') }}"
  no_log: yes

- name: Alias keys for certificates
  set_fact:
    etcd_server_key: "{{ kubernetes_key }}"
    etcd_peer_key: "{{ kubernetes_key }}"
  no_log: yes

- name: Compile control-plane manifests
  set_fact:
    kube_apiserver_manifest: "{{ lookup('template', 'templates/manifests/kube-apiserver.yaml.j2') }}"
    kube_controller_manager_manifest: "{{ lookup('template', 'templates/manifests/kube-controller-manager.yaml.j2') }}"
    kube_scheduler_manifest: "{{ lookup('template', 'templates/manifests/kube-scheduler.yaml.j2') }}"

- name: Create machine FCC directory
  file:
    path: '{{ images_dir }}/{{ vmname }}'
    state: directory

- name: Define control-plane FCC
  template:
    src: templates/controller.yaml.j2
    dest: '{{ images_dir }}/{{ vmname }}/controller.fcc'

- name: Networking
  import_role:
    name: network

- name: Virtual Machine
  import_role:
    name: vm
